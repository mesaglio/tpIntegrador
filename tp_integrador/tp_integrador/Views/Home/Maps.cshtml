
@{
	ViewBag.Title = "Maps";
}
﻿
<script src="http://maps.google.com/maps/api/js?sensor=true" type="text/javascript"></script>

<style>
	#map_canvas img {
		max-width: none;
	}
</style>

<!-- This css is to give a nice big popup "info window" when a marker is clicked on the map -->
<style>
	.infoDiv {
		height: 200px;
		width: 300px;
		-webkit-user-select: none;
		background-color: white;
	}
</style>
<main role="main" class="container">
	<br />
	<!-- This is the div that will contain the Google Map -->
	<div id="map_canvas" style=" height: 500px;"></div>

	<!-- Enclose the Javascript in a "section" so that it is rendered in the correct order after scripts have been loaded etc -->
	@section scripts {
		<section class="scripts">
			<script type="text/javascript" src="~/Scripts/jquery-3.3.1.min.js"></script>
			<script type="text/javascript">

				$(document).ready(function () {
					Initialize();
				});

				// Where all the fun happens
				function Initialize() {

					// Google has tweaked their interface somewhat - this tells the api to use that new UI
					google.maps.visualRefresh = true;
					var BuenosAires = new google.maps.LatLng(-34.6083, -58.3712);

					// These are options that set initial zoom level, where the map is centered globally to start, and the type of map to show
					var mapOptions = {
						zoom: 8,
						center: BuenosAires,
						mapTypeId: google.maps.MapTypeId.G_NORMAL_MAP
					};

					// This makes the div with id "map_canvas" a google map
					var map = new google.maps.Map(document.getElementById("map_canvas"), mapOptions);

					// a sample list of JSON encoded data of places to visit in Tunisia
					// you can either make up a JSON list server side, or call it from a controller using JSONResult
					
					$.ajax({
						type: "GET",
						contentType: "application/json; charset=utf-8",
						url: "@Url.Action("GetTransData","Home")",						
						dataType: "json",
						success: function (data) {
														
							$.each(data, function (i, item) {
								var marker = new google.maps.Marker({
									'position': new google.maps.LatLng(item.GeoLat, item.GeoLong),
									'map': map,
									'title': item.PlaceName
								});

								// Make the marker-pin blue!
								marker.setIcon('http://maps.google.com/mapfiles/ms/icons/blue-dot.png')

								// put in some information about each json object - in this case, the opening hours.
								var infowindow = new google.maps.InfoWindow({
									content: "<div class='infoDiv'><h2>" + item.PlaceName + "</h2><div></div>" +
											"<div>Latitud: " + item.GeoLat + "</div>" +
											"<div>Longitud: " + item.GeoLong + "</div></div>"
								});

								// finally hook up an "OnClick" listener to the map so it pops up out info-window when the marker-pin is clicked!
								google.maps.event.addListener(marker, 'click', function () {
									infowindow.open(map, marker);
								});								
							})
						}
					});

					// Using the JQuery "each" selector to iterate through the JSON list and drop marker pins
					
				}


			</script>
		</section>
	}
</main>
	
